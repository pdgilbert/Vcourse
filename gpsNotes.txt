On BT, if
     gpsmon  127.0.0.1:2947
shows data then all is working correctly. Following instructions are for
the case when there are problems.

Typically the boot process should start gpsd (when all works correctly)
  service --status-all # will show + for gpsd if it is running
or
  service --status-all | grep gpsd

Howeever, it can be running but not working. I had to edit /etc/default/gpsd to

DEVICES="/dev/ttyACM0"
GPSD_OPTIONS="-n"

Then
   systemctl daemon-reload; systemctl reenable gpsd.service
This and more troubleshooting hints are in section Ubuntu/Debian of http://www.catb.org/gpsd/troubleshooting.htm

The service and whether it is enabled on boot is controlled by
   sudo systemctl stop gpsd
   sudo systemctl stop gspd.socket
   sudo systemctl disable gpsd
   sudo systemctl enable gpsd
   sudo systemctl start gpsd
   sudo systemctl daemon-reload
   sudo systemctl reenable gpsd.service

   systemctl status gpsd


Verify actual gps device to use with
  dmesg | tail

Assuming gps shows gps on /dev/ttyACM0  (eg USB ACM   ttyACM0 ), the command
line gpsd start up for default port 2947 and gps usb 
plugged in on /dev/ttyACM0 is
   gpsd  /dev/ttyACM0   # possibly as root ??

verify
  ps -elf | grep gps

If not, check
  lsusb  # should indicate U-Blox AG or other GPS device

There seems to be a difficulty between hotplug and usb gps at boot up in 2017-07-05-raspbian-jessie-lite and several other OS releases as the switch
to systemd is causing headaches. gpsd is started (by gspd.socket?) when gps is pluggged into usb (and fails with device busy)

If 
   cat /dev/ttyACM0
and
   gpsmon  /dev/ttyACM0
shows data but
   gpsmon
   gpsmon  localhost
   gpsmon  127.0.0.1:2947

do not, then the problem is probably gpsd startup or hotplug

(with X it shoud also be possible to run xgps or cgps and show data from gpsd.)

BTW
gpsmon -L # lists a table showing which GPS device types gpsmon has
       built-in support for, and which generic commands can be applied...

****************  connect RC to phone GPS with Share GPS ###############
  -connect phone to RC wifi
  -start GPS and Share GPS
  -under connections add. work through all the settings and
       note the port (default 2947) and IP address
  -press and hold the connetion, then edit, to verify type, port, etc
       Note the port (default 2947) and IP address
  -press briefly the connetion to start it listening
  
  -press (briefly or hold?) the GPS symbol too start GPS

  HAVE NOT GOT THIS TO WORK WITH PYTHON CODE YET

  -got xgps to connect once but cannot repeat. 
  
  -on the RC computer test with gpsmon, eg
      gpsmon  10.42.0.223:2947                NOT WORKING
      xgps  10.42.0.183:2947      WORKING
      gpsmon  10.42.0.183:2947    seems to be getting data but not displaying properly

      # data is flowing in this, but something is wrong format?
      gpsd -S 2950  -D 3 -N  gpsd://10.42.0.183:2947
      gpsmon  127.0.0.1:2950

  Start Share GPS and set connection data type:NMEA  method:  TCP/IP NMEA gpsd 
  server port 2947 (default), select to listen for incoming connections
  both this
      gpsmon  10.42.0.183:2947
  and this
      gpsd -S 2950  -D 3 -N  tcp://10.42.0.183:2947
      gpsmon  127.0.0.1:2950
  work, but not at the same time. The free version of Share GPS only supports
  one connecting device at a time. It also seems necessary to stop the app so
  that it looses the old connection.
  However, I could not get python to read 10.42.0.183:2947 directly. It still
  needs the local server.
  Also, there seem to be a lot of Ill-formed packets and the connection is
  unstable.
  (Not sure why, with local server starting stadiumRC before gpsmon seems to
   work better.)

****************  connect RC to phone GPS with GPS2Net ###############
  -connect phone to RC wifi
  -start GPS and GPS2Net
  -note the port (6000) and IP address (under share)

  -on the RC computer test with gpsmon, eg
      gpsmon  10.42.0.223:6000
  
  -because stadiumRC fails connecting to phone (python module bug?), 
    start gpsd (sudo seems optional) and direct it to the phone, eg
      gpsd    tcp://10.42.0.223:6000
    or with debug and no deamonize
      gpsd  -D 3 -N   tcp://10.42.0.223:6000

    The IP and port above are those of the phone. The gpsd will get data from
    it, but listen on default 127.0.0.1:2947 and pass data along to connecting
    clients. (stadiumRC python seems to like gpsd better than GPS2Net.)

    If it can't bind to IPv4 port gpsd, "Address already in use"
    (You can see what process with    netstat -pant | grep 2947   )
    You could try to stop the process, or just use a non-default port:

      gpsd -S 2948 tcp://10.42.0.223:6000  # uses 127.0.0.1 port 2948
      gpsd -S 2950 tcp://10.42.0.183:6000  # uses 127.0.0.1 port 2950
    or with debug and no deamonize
      gpsd -D 3 -N -S 2948 tcp://10.42.0.223:6000

  -test with gpsmon, eg
      gpsmon  127.0.0.1:2947
      gpsmon  127.0.0.1:2948

BUG  gpsd seem to lose connection after awhile and needs restarting !!
   whereas   gpsmon  10.42.0.223:6000   is ok.

  -edit RCconfig to indicate the GPS port if changed (IP is that of the gpsd 
      running on the RC machine (127.0.0.1)

  -(re)start stadiumRC # Note that the first click on "get RC GPS" might 
     return (0,0) as the connection or GPS seem to take awhile to wake up.
     Try again after a few seconds.

********  multiple GPS devices with GPS2Net ###############

It is possible to have multiple phones/tables on the network. Each would have its
own IP address, but channeling through gpsd each gets it's own local port, eg:

 with gps2net
      gpsd -S 2948 tcp://10.42.0.223:6000  # uses 127.0.0.1 port 2948
      gpsd -S 2950 tcp://10.42.0.183:6000  # uses 127.0.0.1 port 2950

 with Share GPS
      gpsd -S 2948 tcp://10.42.0.183:2947 # uses 127.0.0.1  port 2948
      gpsd -S 2950 tcp://10.42.0.223:2947 # uses 127.0.0.1  port 2950

then
  -test with gpsmon, eg
      gpsmon  127.0.0.1:2948
      gpsmon  127.0.0.1:2950

I have been able to use "Other GPS" in stadiumRC to read these. A gpsList
file for this example might have lines
  RC      127.0.0.1  2948
  phone   127.0.0.1  2950

****************  CLEANUP BELOW ###############
netstat -l
tcp        0      0 localhost:gpsd          *:*                     LISTEN  
... and  LISTENING     25544    /var/run/gpsd.sock

netstat -pant |grep 2947
tcp        0      0 127.0.0.1:2947          0.0.0.0:*               LISTEN      -               
tcp6       0      0 ::1:2947                :::*                    LISTEN      -

 netstat -lnpt
 
more /etc/default/gpsd
more /lib/systemd/system/gpsd.socket

 
check hotplug issues run
 tail -f /var/log/syslog
and plug, unplug usb gps mouse

sudo killall gpsd ??
http://www.catb.org/gpsd/troubleshooting.html
run xgps or cgps. #should show data from gpsd
# sudo gpsd -N -D3 -F /var/run/gpsd.sock
# sudo gpsd -D 5 -N -n /dev/ttyACM0

 -n  don't wait
 -N  don't deamonize
 -D  debug level
 
 see man gpsd re UPP/TCP gpsd://  feeds
 

lsof -i4
lsof -i:2947
# sudo gpsd -D 5 -N -n /dev/ttyACM0
Problem seems to be that systemd grabs loaclhost:2947 and does not release it,
so gpsd reports "Device or resource busy" and fails.
Starting on another port works.
  sudo gpsd -D 5 -N -n -S 2948 /dev/ttyACM0  #-S 2947 is default port
  sudo gpsd  -S 2948 /dev/ttyACM0  #-S 2947 is default port
  xgps 127.0.0.1:2948
