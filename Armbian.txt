###############################################################
###############################################################
Notes that apply to both  Raspbian and Armbian are in file OSsetup.txt

This file contains notes specific to Armbian and the hardware it runs on. 
To date tested primarily on Orange Pi Zero (OPiZ)
with  Armbian_5.34_Orangepizero_Ubuntu_xenial_next_4.13.8.
###############################################################


###############   links #################

https://www.armbian.com/
https://docs.armbian.com/User-Guide_Getting-Started/
https://dl.armbian.com/orangepizero/archive/

Arbian Orange Pi Zero  wlan problems xr819/xradio/ST CW1200
https://forum.armbian.com/topic/3243-orange-pi-zero-wireless-module-status-xradio-st-cw1200/?page=2
https://forum.armbian.com/topic/4245-orange-pi-zero-4110-sun8i-wlan0-is-gone/

OrangePiForum
http://www.orangepi.org/orangepibbsen/forum.php?mod=forumdisplay&fid=67
GPIO
http://www.orangepi.org/orangepibbsen/forum.php?mod=viewthread&tid=148&page=13

pinout etc
http://linux-sunxi.org/Xunlong_Orange_Pi_Zero

troubleshooting
https://docs.armbian.com/User-Guide_Basic-Troubleshooting/

Improving small H2+/H3 board performance with mainline kernel
https://forum.armbian.com/topic/5250-improving-small-h2h3-board-performance-with-mainline-kernel/

#########################################

There is no monitor support on the board, so it is neccesary to boot and 
use ssh. ( or consider http://lucsmall.com/2017/01/19/beginners-guide-to-the-orange-pi-zero/ 
has notes on using serial interface for COM connection.)

p7zip -d Armbian...7z

sha256sum -c sha256sum.sha # checks files as listed in file sha256sum.sha 

Following needs mostly to be as root.

1/  Burn the image to microSD card. 
     dd  bs=4M if=Armbianxxx.img of=/dev/sdc
  ( root / 1234 )
 (used if=Armbian_5.34_Orangepizero_Ubuntu_xenial_next_4.13.8.img for O Pi Zero)
 (used if= 
      Armbian_5.34.171121_Orangepilite_Debian_stretch_next_4.13.14_desktop.img
    for O Pi Zero Lite. Only nightly has 4. kernel as of Dec 15, 2017)
 (used if= 
      Armbian_5.34.171121_Orangepizeroplus_Debian_stretch_next_4.13.14.img
     for O Pi Zero Plus.)

 (Also tried Armbian_5.34_Orangepizero_Debian_jessie_next_4.13.8.img on Pi Zero
   but wifi seems even more problematic.)

  (Hope it boots and establishes eth0 connection to AP, as there is no monitor
   support on the board.)
  Need to boot with eth0 plugged in, it does not seem to hotplug. 
  Also, wifi is not on by default. See more notes about wifi below.
 
2/ get IP address (if no monitor then from from hardwired router DHCP)

3/ ssh root@192.168.2.160(eg)  /1234  and change to better password.
   Create user bt.
   Also remove or change password for user  orangepi if it exists.

4/ Mics Armbian/Orange Pi specific
   (armbian-config needs an Internet connection, so not used here.)

   disable auto upgrade
     systemctl list-unit-files | grep apt
     systemctl disable apt-daily-upgrade.timer
     systemctl disable apt-daily.timer
     systemctl list-unit-files | grep apt

   get rid of avahi
     apt-get remove avahi-autoipd

[Pi Zero Lite and Pi Zero Plus

SHOULD set no auto-login
SHOULD disable desktop but have not yet

systemctl disable bluetooth.service
systemctl disable apt-daily-upgrade.service
systemctl disable apt-daily.service

[Pi Zero Lite
systemctl start systemd-resolved.service
systemctl enable systemd-resolved.service
]

   (need Internet here)
   gpio on Orange:
       apt-get install python3-dev # orangepi_PC_gpio_pyH3 setup needs headers
       apt-get install gcc         # may be done already
       cd /home/bt
       as bt:
       git clone https://github.com/duxingkei33/orangepi_PC_gpio_pyH3.git
THIS DOES NOT WORK ON H5
       cd orangepi_PC_gpio_pyH3
       as root:
       python3 setup.py install  # this is python package pyA20.gpio

TRYING INSTEAD
       git clone https://github.com/rm-hull/OPi.GPIO.git
       cd OPi.GPIO
       as root:
       python3 setup.py install  # this is python package OPi.GPIO
       


5/ See Setup after image is "burned" on SD card in OSsetup.txt

#################################################################
##########  wifi ##########
 
  -turn on wifi connection to network using 
     nmtui-connect SSID

    (Turning on wifi is a bit sensitive on OPiZ. Above worked and is following https://docs.armbian.com/User-Guide_Getting-Started/#how-to-connect-to-wireless

     Other approaches have caused problems. The xr819 chip is reputed to give
     problems and the xradio driver handles it with difficulty.

Fresh Armbian had
root@orangepizero:~# nmcli device
DEVICE  TYPE      STATE         CONNECTION 
wlan0   wifi      disconnected  --         
eth0    ethernet  unmanaged     --         
lo      loopback  unmanaged     --         

See also https://wiki.debian.org/NetworkManager  which points out that
eth0 will not be managed if it is even mentioned in /etc/network/interfaces.
So, commenting out eth0 lines in that file and rebooting gives
DEVICE  TYPE      STATE         CONNECTION 
eth0    ethernet  connected  Wired connection 1 
wlan0   wifi      connected  mySSID               
lo      loopback  unmanaged  --          

Examples of nmcli 
  nmcli device
  nmcli device show
  nmcli connection show
  nmcli device wifi list
  nmcli -p -f general,wifi-properties device show wlan0
  nmcli general permissions
  nmcli con down mySSID  # where mySSID is connection NAME returned in above
  nmcli con  up  mySSID 
  NOT? nmcli radio wifi off 
dmesg | tail -20

set ssid
   nmcli device wifi con "egSSID" password "secret"
(which generates egSSID file in /etc/NetworkManager/system-connections/ )

NetworkManager
https://help.ubuntu.com/community/NetworkManager#Editing_Network_Settings_in_GConf

I tried to remove Network Manager on Armbian but that messed up.

############################  So gpio  does not require root ############################

 sudo groupadd gpio
 sudo adduser bt  gpio 

edit (create)  /etc/udev/rules.d/99-com.rules and append:

https://forum.armbian.com/topic/1851-rfc-make-armbian-more-iot-friendly/?page=2
Dec 5, 2017 post

SUBSYSTEM=="gpio", ACTION=="add", RUN="/bin/sh -c '\
   echo $DEVPATH >> /tmp/pippo;\
    chown -R root:gpio /sys/class/gpio && chmod -R 770 /sys/class/gpio;\
    chown -R root:gpio /sys$DEVPATH && chmod -R 770 /sys$DEVPATH\
'"   

And (as of Dec 22, 2017) patch GPIO as described (but different line numbers in checked out version)
https://forum.armbian.com/topic/5225-gpio-from-python-user-space-opigpio-app/?tab=comments#comment-39842

############################  tests

echo 7 >  /sys/class/gpio/export                  # enable access to PA7                 
sleep 0.1                                          # wait some time to become gpio12 active
echo out > /sys/class/gpio/gpio7/direction        # PA7 is output
echo 0 >   /sys/class/gpio/gpio7/value            # PA7 is low
echo 1 >   /sys/class/gpio/gpio7/value            # PA7 is high
echo 7 >  /sys/class/gpio/unexport                # disable access to PA7

echo 19 >  /sys/class/gpio/export                 
sleep 0.1                                         
echo out > /sys/class/gpio/gpio19/direction       
echo 0 >   /sys/class/gpio/gpio19/value           
echo 1 >   /sys/class/gpio/gpio19/value           
echo 19 >  /sys/class/gpio/unexport               

echo 12 >  /sys/class/gpio/export                  # enable access to PA12                 
sleep 0.1                                          # wait some time to become gpio12 active
echo out > /sys/class/gpio/gpio12/direction        # PA12 is output
echo 0 >   /sys/class/gpio/gpio12/value            # PA12 is low
echo 1 >   /sys/class/gpio/gpio12/value            # PA12 is high
echo 12 >  /sys/class/gpio/unexport                # disable access to PA12

############################  still cleaning up


  lsusb         #  shows  U-Blox AG (Need to be root on Orange) but
  dmesg | tail  #  does not. I think we need  cdc_acm, pps_ldisc,  ipv6 ?
  modprobe -v --dry-run cdc_acm
  modprobe -v --dry-run pps_ldisc

example turning on/off LED
http://www.orangepi.org/orangepibbsen/forum.php?mod=viewthread&tid=148&page=13

http://www.instructables.com/id/Orange-Pi-One-Python-GPIO-basic/
https://diyprojects.io/orange-pi-onelite-tutorial-use-gpio-python-pinouts/
https://github.com/duxingkei33/orangepi_PC_gpio_pyH3
git clone https://github.com/duxingkei33/orangepi_PC_gpio_pyH3



#######################################################################

report system info to Arbian forum:
 armbianmonitor -u
 
Unable to locate package gpsd-cdbg  Not sure if this is needed.

on jessie I think I had to
nano -w /boot/armbianEnv.txt # and add
overlays=usbhost2
or
overlays=usbhost1 usbhost2

usbhost2  is the full size USB port, not decribed as OTG, but it seems 
  to handle plugged in devices in the same way a computer usually does, which
  would be OTG. Using this for plugging in GSP puck does work and is what has
  been used below.

usbhost1 (or possibly usbhost0) is the micro USB port decribed as OTG and used for power. So far I have not been able to make this work. It is also complcated by needing to suppy power on this usb port. (Apparantly power can be supplied on a board pin, but that will not power a usb device on the port.) So this approach requires a powered hub with micro usb ports (which I don't have).

lsusb
Bus 005 Device 002: ID 1546:01a8 U-Blox AG 

cat /dev/ttyACM0 # shows data, it works


#########################################################################

#########################################################################

Tried to remove Network Manager on Armbian xenial but it messed up:

   nmcli networking off # since it was not managing eth0 anyway
   systemctl stop network-manager.service
   systemctl stop NetworkManager-dispatcher.service
   systemctl stop NetworkManager-wait-online.service
   systemctl stop NetworkManager.service
   
   systemctl disable network-manager.service
   systemctl disable NetworkManager-dispatcher.service
   systemctl disable NetworkManager-wait-online.service
   systemctl disable NetworkManager.service

   #check it actually worked
   systemctl list-unit-files --state=enabled

   (leave networking.service enabled. It is "one shot" using 
     /etc/network/interfaces to ifup and ifdown. )

   reboot   #with fingers crossed

   #check it actually worked
   systemctl list-unit-files --state=enabled

  journalctl -b
  
  
  systemctl list-unit-files --state=enabled
  systemctl disable  syslog.service
  systemctl disable rsyslog.service
  /etc/systemd/system/multi-user.target.wants/rsyslog.service
  but it doe not seem to be needed (multi-user still starts)

#########################################################################

